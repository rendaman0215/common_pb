syntax = "proto3";
option go_package = "/pb";
package proto;

// 以下のimportは、各protoファイルで定義されているものを再利用するために必要
import "proto/error.proto";
import "proto/models.proto";

// googleから提供されているprotoファイルをimport
import "google/protobuf/timestamp.proto";

// 更新の種類
enum CRUD {
  UNKNOWN = 0;
  INSERT = 1;
  UPDATE = 2;
  DELETE = 3;
}

/************************************
  * 商品カテゴリ更新用param型とResult型
  **********************************/
// 商品カテゴリ更新用param型
message CategoryUpParam {
  string id = 1;    // カテゴリID
  string name = 2;  // カテゴリ名
}

// 商品更新用param型
message ProductUpParam {
  string id = 1;         // 商品ID
  string name = 2;       // 商品名
  int32 price = 3;       // 価格
  string categoryId = 4;  // カテゴリID
}

// 商品カテゴリを更新するためのResult型
message CategoryUpResult {
  Category category = 1;  // カテゴリ
  Error error = 2;        // エラー情報
  google.protobuf.Timestamp timestamp = 3;  // タイムスタンプ
}

// 商品を更新するためのResult型
message ProductUpResult {
  Product product = 1;  // 商品
  Error error = 2;      // エラー情報
  google.protobuf.Timestamp timestamp = 3;  // タイムスタンプ
}

/************************************
  * 商品カテゴリと商品の更新サービス型
  **********************************/
// 商品カテゴリ更新サービス型
service CategoryCommand {
  // 商品カテゴリを追加した結果を返す
  rpc Create(CategoryUpParam) returns (CategoryUpResult);
  // 商品カテゴリを更新した結果を返す
  rpc Update(CategoryUpParam) returns (CategoryUpResult);
  // 商品カテゴリを削除した結果を返す
  rpc Delete(CategoryUpParam) returns (CategoryUpResult);
}

// 商品更新サービス型
service ProductCommand {
  // 商品を追加した結果を返す
  rpc Create(ProductUpParam) returns (ProductUpResult);
  // 商品を更新した結果を返す
  rpc Update(ProductUpParam) returns (ProductUpResult);
  // 商品を削除した結果を返す
  rpc Delete(ProductUpParam) returns (ProductUpResult);
}
